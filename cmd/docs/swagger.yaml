definitions:
  domain.Product:
    properties:
      code_value:
        type: string
      expiration:
        type: string
      id:
        type: integer
      is_published:
        type: boolean
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  handlers.CreateProductRequest:
    properties:
      code_value:
        type: string
      expiration:
        type: string
      is_published:
        type: boolean
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    required:
    - code_value
    - expiration
    - name
    - price
    - quantity
    type: object
  handlers.CreateProductResponse:
    properties:
      code_value:
        type: string
      expiration:
        type: string
      id:
        type: integer
      is_published:
        type: boolean
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  rest.ErrorResponse:
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost/8080
info:
  contact:
    name: API Support
    url: https://developers.mercadolibre.com.ar/support
  description: This API Handle MELI Products.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: MELI Bootcamp API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: This method get a list with all products.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully list of products
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
      summary: Get All products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: This method creates a new product entry in the system by taking
        a JSON input with the required product information. It returns an error if
        there is an issue with the input data, if the product already exists, or if
        there is an internal server error.
      parameters:
      - description: Product Information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created product
          schema:
            $ref: '#/definitions/handlers.CreateProductResponse'
        "400":
          description: 'BadRequest: invalid data'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "409":
          description: 'Conflict: cannot create the given product, it already exists
            or error date format'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: 'InternalServerError: an internal error has occurred'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Create a new product
      tags:
      - products
  /products/:id:
    patch:
      consumes:
      - application/json
      description: This method update a product entry in the system by taking a JSON
        input with the required product information and Id. It returns an error if
        there is an issue with the input data, if the product code already exists,
        or if there is an internal server error.
      parameters:
      - description: Product Information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateProductRequest'
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Successfully updated product
          schema:
            $ref: '#/definitions/handlers.CreateProductResponse'
        "400":
          description: 'BadRequest: invalid data'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "409":
          description: 'Conflict: cannot update product, code already exists or error
            date format'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: 'InternalServerError: an internal error has occurred'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Update partial a product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: This method update a product entry in the system by taking a JSON
        input with the required product information and Id. It returns an error if
        there is an issue with the input data, if the product code already exists,
        or if there is an internal server error.
      parameters:
      - description: Product Information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateProductRequest'
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Successfully updated product
          schema:
            $ref: '#/definitions/handlers.CreateProductResponse'
        "400":
          description: 'BadRequest: invalid data'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "409":
          description: 'Conflict: cannot update product, code already exists or error
            date format'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: 'InternalServerError: an internal error has occurred'
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Update a product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted product
        "400":
          description: Invalid data
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Product not found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: An internal error has occurred
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Delete product by ID
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Retrieves a specific product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved product
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Invalid data
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get product by ID
      tags:
      - products
  /products/consumer-price:
    get:
      consumes:
      - application/json
      description: Retrieves a list of products with prices for the specified product
        IDs
      parameters:
      - description: Comma-separated list of product IDs
        in: query
        name: list
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of consumer products
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
        "400":
          description: Invalid data
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: An internal error has occurred
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Get consumer prices for a list of product IDs
      tags:
      - products
  /products/search:
    get:
      consumes:
      - application/json
      description: Retrieves a list of products with a price greater than the specified
        value
      parameters:
      - description: Minimum product price
        in: query
        name: priceGt
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of products
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
        "400":
          description: Invalid data
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Price must be greater than 0
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search products by price
      tags:
      - products
swagger: "2.0"
